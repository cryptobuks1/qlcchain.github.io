(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{298:function(t,e,s){"use strict";s.r(e);var a=s(2),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"publish–subscribe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#publish–subscribe","aria-hidden":"true"}},[t._v("#")]),t._v(" Publish–Subscribe")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",[t._v("Available from go-qlc v1.3 and above")])]),t._v(" "),s("p",[s("strong",[t._v("Supported protocols:")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("JSON-RPC 2.0")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Websocket")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("IPC")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Publish–subscribe")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("✓")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✓")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✓")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✓")])])])]),t._v(" "),s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v("From version 1.3 gqlc has experimental support for pub/sub using subscriptions as defined in the JSON-RPC 2.0 specification. This allows clients to wait for events instead of polling for them")]),t._v(" "),s("p",[t._v("It works by subscribing to particular events. The node will return a subscription id. For each event that matches the subscription a notification with relevant data is send together with the subscription id")]),t._v(" "),s("p",[t._v("Example:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// create subscription\n>> {"id": 1, "method": "qlc_subscribe", "params": ["newBlock"]}\n<< {"jsonrpc":"2.0","id":1,"result":"0xcd0c3e8af590364c09d0fa6a1210faf5"}\n\n// incoming notifications\n<< {"jsonrpc":"2.0","method":"qlc_subscription","params":{"subscription":"0xcd0c3e8af590364c09d0fa6a1210faf5","result":{"type":"State","token":"a7e8fa30c063e96a489a47bc43909505bd86735da4a109dca28be936118a8582",<...>}}}\n<< {"jsonrpc":"2.0","method":"qlc_subscription","params":{"subscription":"0xcd0c3e8af590364c09d0fa6a1210faf5","result":{"type":"State","token":"38b13da6e7425ee4f21194504c9c9ceea0b09f65da3f32bed0c36cbced44ce0b",<...>}}}\n\n// cancel subscription\n>> {"id": 1, "method": "qlc_unsubscribe", "params": ["0xcd0c3e8af590364c09d0fa6a1210faf5"]}\n<< {"jsonrpc":"2.0","id":1,"result":true}\n')])])]),s("p",[t._v("Notice:")]),t._v(" "),s("ul",[s("li",[t._v("subscriptions require a full duplex connection. gqlc offers such connections in the form of websockets and ipc")]),t._v(" "),s("li",[t._v("subscriptions are coupled to a connection. If the connection is closed all subscriptions that are created over this connection are removed")])]),t._v(" "),s("h2",{attrs:{id:"create-subscription"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-subscription","aria-hidden":"true"}},[t._v("#")]),t._v(" Create subscription")]),t._v(" "),s("p",[t._v("Subscriptions are creates with a regular RPC call with ledger_subscribe as method and the subscription name as first parameter. If successful it returns the subscription id.")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Parameters")]),t._v(":\n"),s("ul",[s("li",[t._v('the first one is subscription name, like "balanceChange"')]),t._v(" "),s("li",[t._v("others are optional arguments")])])])]),t._v(" "),s("demo",{staticClass:"custom-block-demo"},[s("template",{slot:"code"},[t._v('[{"type":"fence","tag":"code","attrs":null,"map":[51,61],"nesting":0,"level":1,"children":null,"content":"{\\n\\t\\"jsonrpc\\": \\"2.0\\",\\n\\t\\"id\\": 1,\\n\\t\\"method\\": \\"ledger_subscribe\\",\\n\\t\\"params\\": [\\"balanceChange\\",\\"qlc_3hw8s1zubhxsykfsq5x7kh6eyibas9j3ga86ixd7pnqwes1cmt9mqqrngap4\\"]\\n}\\n\\n","markup":"```","info":"json tab:Request","meta":null,"block":true,"hidden":false}]')]),t._v(" "),s("div",{staticClass:"language-json tab:Request extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"jsonrpc"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"method"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ledger_subscribe"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"params"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"balanceChange"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"qlc_3hw8s1zubhxsykfsq5x7kh6eyibas9j3ga86ixd7pnqwes1cmt9mqqrngap4"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("ul",[s("li",[s("strong",[t._v("Returns")]),t._v(":\nIf successful it returns the subscription id immediately。")])])],2)],1)},[],!1,null,null,null);e.default=n.exports}}]);